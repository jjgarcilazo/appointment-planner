{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","onChange","value","map","contact","index","name","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","htmlFor","type","id","aria-label","placeholder","e","target","required","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","tempArray","Object","values","className","element","TileList","arrayList","AppointmentsPage","appointments","addAppointment","useState","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","pattern","ContactsPage","addContact","duplicate","setDuplicate","useEffect","indexOf","console","log","App","setAppointments","setContacts","ROUTES","to","activeClassName","exact","path","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c0ab993.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const ContactPicker = ({contacts, onChange}) => {\n  return (\n    <select onChange = {onChange} >\n      <option value=\"\" key=\"default\">Please select a Contact</option>\n      {contacts.map( (contact,index) => (\n        <option value={contact.name} key={index}>{contact.name}</option>\n      ))}\n    </select>\n  );\n};\n","import React from \"react\";\n\nimport { ContactPicker } from '../contactPicker/ContactPicker';\n\nexport const AppointmentForm = ({\n  contacts,\n  title,\n  setTitle,\n  contact,\n  setContact,\n  date,\n  setDate,\n  time,\n  setTime,\n  handleSubmit\n}) => {\n  const getTodayString = () => {\n    const [month, day, year] = new Date()\n      .toLocaleDateString(\"en-US\")\n      .split(\"/\");\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n  };\n  \n  //handle functions\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value)\n  }\n  const handleDateChange = (e) => {\n    setDate(e.target.value)\n  }\n  const handleTimeChange = (e) => {\n    setTime(e.target.value)\n  }\n  const handleContactChange = (e) => {\n    setContact(e.target.value)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"title\">Title</label>\n      <input\n        type=\"text\"\n        id=\"title\"\n        aria-label=\"Title\"\n        placeholder=\"What is the appointment about?\"\n        value={title}\n        onChange={handleTitleChange}\n        required\n      />\n\n      <label htmlFor=\"date\">Date</label>\n      <input\n        type=\"date\"\n        id=\"date\"\n        aria-label=\"Date\"\n        min={getTodayString()}\n        value={date}\n        onChange={handleDateChange}\n        required\n      />\n\n      <label htmlFor=\"time\">Time</label>\n      <input\n        type=\"time\"\n        id=\"time\"\n        aria-label=\"Time\"\n        value={time}\n        onChange={handleTimeChange}\n        required\n      />\n\n      <ContactPicker \n        contacts={contacts}\n        value={contact}\n        onChange={handleContactChange}\n      />\n\n      <input type=\"submit\" value=\"Add\"/>\n    </form>\n  );\n};\n","import React from \"react\";\n\nexport const Tile = ({value}) => {\n  const tempArray = Object.values(value)\n\n  return (\n    <div className=\"tile-container\">\n      {tempArray.map( (element,index)=> {\n       return index ? \n        <p className=\"tile\" key={index}>{element}</p> :\n        <p className=\"tile-title\" key={index}>{element}</p>;\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport {Tile} from '../tile/Tile';\n\nexport const TileList = ({arrayList}) => {\n  return (\n    <div>\n      {arrayList.map( (value,index) => (\n        <Tile \n          value={value}\n          key={index}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, {useState} from \"react\";\n\nimport { AppointmentForm  } from '../../components/appointmentForm/AppointmentForm';\nimport { TileList } from '../../components/tileList/TileList';\n\nexport const AppointmentsPage = ({appointments,addAppointment,contacts}) => {\n  //local state variables\n  const [title,setTitle] = useState('');\n  const [contact,setContact] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //callback function from prop to set contact\n    addAppointment(title,contact,date,time);\n    //set back to default\n    setTitle('');\n    setContact('');\n    setDate('');\n    setTime('');\n  };\n\n  return (\n    <div>\n      <section>\n        <h2>Add Appointment</h2>\n        <AppointmentForm  \n          title={title}\n          contact={contact}\n          date={date}\n          time={time}\n          setTitle={setTitle}\n          setContact={setContact}\n          setDate={setDate}\n          setTime={setTime}\n          handleSubmit={handleSubmit}\n          contacts={contacts}\n        />\n      </section>\n      <hr />\n      <section>\n        <h2>Appointments</h2>\n        <TileList \n          arrayList={appointments}\n        />\n      </section>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ContactForm = ({\n  name,\n  setName,\n  phone,\n  setPhone,\n  email,\n  setEmail,\n  handleSubmit\n}) => {\n\n  //handle functions\n  const handleNameChange = (e) => {\n    setName(e.target.value)\n  }\n  const handlePhoneChange = (e) => {\n    setPhone(e.target.value)\n  }\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">First Name</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        aria-label=\"Name\"\n        placeholder=\"John\"\n        value={name}\n        onChange={handleNameChange}\n        required\n      />\n      <label htmlFor=\"phone\">Phone Number</label>\n      <input\n        type=\"tel\"\n        id=\"phone\"\n        aria-label=\"Phone Number\"\n        placeholder=\"(000) 000-0000\"\n        pattern=\"((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}\"\n        value={phone}\n        onChange={handlePhoneChange}\n        required\n      />\n      <label htmlFor=\"email\">Email Address</label>\n      <input\n        type=\"email\"\n        id=\"email\"\n        aria-label=\"Email\"\n        placeholder=\"example@nowhere.com\"\n        value={email}\n        onChange={handleEmailChange}\n        required\n      />\n      <input type=\"submit\" value=\"Add\"/>\n    </form>\n  );\n};\n","import React, {useState, useEffect} from \"react\";\n\nimport { ContactForm } from '../../components/contactForm/ContactForm';\nimport { TileList } from '../../components/tileList/TileList';\n\nexport const ContactsPage = ({contacts, addContact}) => {\n  //local states\n  const [name, setName] = useState('');\n  const [phone,setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [duplicate,setDuplicate] = useState(false);\n\n  //check for duplicate contact name\n  useEffect( ()=>{\n    let checker = contacts.map( contact => contact.name ).indexOf(name);\n    if(checker !== -1){\n      setDuplicate(true);\n      console.log('Duplicate name entry');\n    } else {\n      setDuplicate(false);\n    }\n  },[contacts, name]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //Add contact info and clear data if the contact name is not a duplicate\n    if(!duplicate){\n      //callback function from prop to set contact\n      addContact(name,phone,email);\n      //set back to default\n      setName('');\n      setPhone('');\n      setEmail('');\n    }\n  };\n\n  /*\n  Using hooks, check for contact name in the \n  contacts array variable in props\n  */\n\n  return (\n    <div>\n      <section>\n        <h2>Add Contact</h2> \n        <ContactForm \n          name={name}\n          phone={phone}\n          email={email}\n          setName={setName}\n          setPhone={setPhone}\n          setEmail={setEmail}\n          handleSubmit={handleSubmit}\n        />\n      </section>\n      <hr />\n      <section>\n        <h2>Contacts</h2>\n        <TileList \n          arrayList={contacts}\n        />\n      </section>\n    </div>\n  );\n};\n","import React, {useState} from \"react\";\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\n\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\n\nfunction App() {\n//state variables\n  const [appointments, setAppointments]=useState([]);\n  const [contacts, setContacts]=useState([]);\n\n  const ROUTES = {\n    CONTACTS: \"/contacts\",\n    APPOINTMENTS: \"/appointments\",\n  };\n\n//add data functions\n  const addContact = (name, phone, email) => {\n    setContacts( prev => (\n      [...prev,\n        {name, phone,email}\n      ]))\n  }\n\n  const addAppointment = (title, contact, date, time ) => {\n    setAppointments( prev => (\n      [...prev,\n      {title, contact, date, time}\n    ]))\n  }\n\n  return (\n    <>\n      <nav>\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\n          Contacts\n        </NavLink>\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\n          Appointments\n        </NavLink>\n      </nav>\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to={ROUTES.CONTACTS} />\n          </Route>\n          <Route path={ROUTES.CONTACTS}>\n            <ContactsPage contacts={contacts} addContact={addContact}/>\n          </Route>\n          <Route path={ROUTES.APPOINTMENTS}>\n            <AppointmentsPage appointments={appointments} contacts={contacts} addAppointment={addAppointment}/>\n          </Route>\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}